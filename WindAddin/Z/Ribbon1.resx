<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnInsertCoordinate.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAB3RJTUUH1wkHFCQMsFl63gAAGDBJREFU
        eF7tnWusHdV1x0kTkgaSNg30mT6StmnaQl+qEkSVJi0fkBoVqeJDaAVf+gFVsqqCBERFSBUgIRAWqIHU
        NuZl3ghjHjYYjLHN09gYgw3GYN7G2MbXvF8GDJ6u35yzjtddd83smTn33DvHPlv665wzd9bM7P37r733
        7Dn33gNGZVTqlC8Y/dJI0y7LY+BFoX9JdKDoy6KviH55pCkX7U77wwEeaoaBFQ7+RREnPUj0ddE3RN8U
        HSI6dKQpE+1Nu9P+cIAHXOAzMBPgME7yNREX8S3Rd0TfFX1P9KcjTZlob9qd9ocDPOACHzhNesFVdDNf
        FXGyb4sOF31f9EPRj0T/MNKUifam3Wl/OMADLvCB06T3AhyQsYbuBsdxUi7gJ6JjRT8V/etIUybam3an
        /eEAD7jAB04DMQDdC2MO3c4PRJz8eNGJohmi/xxpykR70+60PxzgARf4wGnSDcC4wqyTiQdjD67DgVzE
        ydmoTGvp8oALfOA06fMANQCzTyYgPxbRDeHEn3ERYzt3Zq9t3SralmvrNrQ917btqtdzbX/dakf2+g6r
        sWzHmNXO/NhWO994I9Qb6M03Q72J3nqrUG+p3n67VG97vfNOLb0ziXr//ffVAPCAC3wGZgDuPZloMAtl
        IsJYRHf031yEgq8OPwV+bODgq0BvAjyC1dO7706qugaAB1zgA6fpMUAHfAx/YFnvgKuS4AVmkeoAnwrI
        ZWqNAarB3zEB/njwNbLeAVc1BV8Vej+w3x2AWmaA8eDrdfmDAZ/q5mtDl0ZPKQI1Tu+9N2lqkQGawx8z
        4FEIHjnoqAn4VLaPA44EWpFCwCiANQi1xgAW/l7wE+Fb8FXHekB79QVeoEaqAr0f2O8NQC0zQAf6q1u2
        ZPPnz8/uuOOObIu891l/ww031NKZi7K+FR13WPSe3O4VqUUG2Jv1t99+e3b66adnF154YbZmzZpx8NUA
        YzWyHoA3rmku4l988cXG4nqj7VXVT/zQGMB2+StWrMjhX3311dmmTZvGwQe4GiAEjwx8BMD5a5uL+Bde
        eKGxuN5oe1X1E08sCz5FapkBOuM84/PGjRuzl19+OR97O/D3ZjyVCuE78IhjAfDWJ5qL+Oeee66xuN5o
        e1X1E58b4IMP9qq9Bqg+2YsMoMCtdGIHwIXrm4t4eqKm4nqj7VXVT/wEAzi1xgB74Vvw8S2eNUDU5fsZ
        PgAXP9VcxD/zzDONxfVG26uqn3hiPxDQRWqZAYrhK3BrAAVuZcFbAyx5urmIZ0hqKq432l5V/cTnBvjw
        w47abYBq8NG8m5ZUgq/38wBc9kxzEb9hw4bGAkK0var6iSf2QzVAoNYYwMLnsbCuA7BE7A0AkKkWDTms
        wgBFap0BxiTj/TqAhU+mA2Tpxk73vHhDlt3xZGeyxox9weNy6/ZY5/79+kez7NpVHYDRCl60ahet0J13
        3nnjV9Bk9mzlZ9a5pHtVASHqfnMJBKsIUgpiqI8+yjVUBgA+8usAOfgu/MYGSIAfB78LfoIBBGwpeAGq
        spDHGUAaPQXcK4fYBVqkjwpErP3s41pjAIWPgMQEhnUAwPiZfj8GKM16B14zPjeAAK4LXpUbQEBWAh5A
        8hDrKBXbOgPY7l67fK8mBqiT9b2uHglgNUAt8AJTlWewAvYSCFYRpP3GACn4en/f2AA1waswQAR+AnQk
        UFUKeYIBpOHLgHuNg7hr1wTtKhGxfpuNbY0BqsJvbICq8LvQkQLvGUAAp8CPA91VbgCBVwe6hRRBrKpU
        bCsNUAa/HwPUyfpetotyA0TQkQAuAq/Ax2VwkQQGiiDtVwYA+Da599d1AN5b+CzuALSugDgZokGHTR9/
        /PEE7eqqVQbQjPfrABY+K3tU6umnn87vFFjvfvbZZ/PbRZ5+Pf/88/ljUJ6Fv/TSS/mdBPvbzK+S9ba7
        twaokvE+uzl/KstDdWEVQayiVGxrDGBv9fw6gIXf2AAefhd6GXiVNUBV6FacPwRsJTAUuNf+YYAufMSM
        XdcBgOa/o9fUAE3gk+3ETwCPAtg9GbjEj4OtCoBEmgDxk09yfVJBxEbbEcdonQH8hM/DZ0mXStU1gIef
        BI8EcmiACLgqAE1877MFmVIXVBnElFKxrTJAFfiNDdAFXzXr7ThPvIIvhG+AexEfAvYKAKEUxDKlYttl
        gArwWc6lUk0NUDXre9kuIr4J+CqTuAiKVwTx008/rSRio+2q1hjAws8NYOD3DCDwmxqgbtb3JJCJbwJe
        Rbz97GGWCUgpiGVKxbbSAHxBVNcBeG/hqwFGqq4IvKp1BqDr9+sAFj53CFSqUQ9QkPlR1ttsJ74s6212
        e5HFxPvMVkVQvFIQy5SKbZUBdNz36wAWPku6VKq2AQLwE+AL5GisJz4CXzajt5CJt58jEGVKQSxTKrY1
        BrCTPu7ZgQs8MtfCb2qAKvA9eARo4puAVxHPawSgilIQy5SKbY8BuvCRH/P9o1wq1dgAVeEb4MTr+wg6
        8tCt+gGI+olPxbbOACn4rOlTqUYG8OArwO8ZIIBeBt42cj8AkY3fvXt3LREbbVe12gA5fGMAfZxLpWob
        IAA/Ab4Dbw0wAX4A3YNXWYB1pJBSEMuUim2VAarAZ35ApeoaoBH8LmziLfwIPIogIuKj7V4RIJSCWKZU
        bGsMYOG/btYB+I0hC18NMFJ1ReBV7TFAFz7y6wAWPg90qFSjHsBnfUHm22xHxNfJeC/i/bYIRpFSEMuU
        im2dAej2/TqAhd/YAFXgO/C5BDTxTeEj4nmNAFRRCmKZUrGtMoCO+zy0AS7wmLyNM4D8jErVNYCHPw58
        AXyFTXwT8Kp+AKKi+M8++ywpYqPtiGO0zwDS3ftJn83+yTBAHfjWABHcMimoIoBVVQYxpVRsawxg4fcM
        EMDv1wB14asBIsBFigD6bWXykFIQy5SKbaUByuCzNEylmhjAw/fgI/gAJd5DLlIElPhou1UER5WCWKZU
        bHsMYOF7Axj4TQ2QhO/AK3xEvIUcKYKqIj7ajiIoXimIZUrFtsoACp/fFJ5/883ZnXfemY3J+8gAI1VX
        BF7VPgNIxt++cGFvHeCxxx4bB5/HulSqcQ9QI/NVxPttKMroSMTzGgGoohRE1eeffz5BxOr7KKY1BrBd
        /4r77uutAwDVwu/LAA3gI+L9Ng+5TFUBFsnGW7hVRGy0XdUuA3THfZ7cAfaVV17JV/AsfH5GpWoboCF8
        RLz9HEEukgdYV0BKQSxTKrY9BujCj2b9agB9pk+l6hqgKXxEPK8R4CJZiMTbzyl5SCmIZUrFttMAAfzJ
        NEAd+Ij4CHKRPFDi/TavCI4qBbFMqdhWGcBmfxF8loapVFMD1IWPiI9Ae0VgEfHRdhRB8UpBLFMqtjUG
        qNL192uAJvABS7yH7RXBVRHvt0UwipSCWKZUbLsM0IXPvf/Nug6wc+c4+EwKqdRI1bVnz55CtdIAC906
        gIWvBqjbAzTJfBXx9rPKZ3WRiI+yr6pSEMuUim2PAbrw6fbvc+sAk2mACLaXB0283xaBLhLxEdiUFFIK
        YplSsa00AMAByzoAD3Es/EEbwINGxNvPEeRICpJ4C7ZMEaQUxDKlYltlgLKJX88AYggq1cQAEXArC9mK
        eH0fgY5koRJvP0eK4KhSEMuUim2fAQS4v+2z8OkRqFRdA0TArSxwL+J5jUBH8nCJ99tUERSvFMQypWJb
        Y4Aw+wV6WwwQgfaKACPi/bYIRpGqQKREP7OxWuzPKV0eLTCAQE9l/yAMEEG3Ij4CbuUBWxFvP1sAVeQh
        2p8VyZ47+rmK0uXRDgMAfqfc++s6AH89LDLASNVlzefVSgP4dQALfzJ7gCjbrTS7ibfZbhU1qhfxUfaV
        iaLviyBG1+OVunZKl8c0G6ALH/l1gHEG2NX5Xb02GMADKRLxFm6ZKPazxvMaXUN03VbERts1ntLl0R4D
        ABywrAPwHN9m/2QZIGoUK9vIxNvPyAIukkIk3kKNRNH39hj+/NG1Il8/la+7j6N0eUyvARR+roLJn/4m
        D5XqxwC+Eby0sVUWALKAimThEm8/F8nG2/MRb6/P1sVLF7xUxJatgbTPAEXwp8gAtuEtAH1vIRXJgyXe
        b/PSWHtevSZ//chC1kfdkYj122zsUBlAv9hJpZoawMKOZAGoiNf3FnSkCC7x0XakcfZ89nq4Zr3+CLi2
        iZVtM2KjfTS+XQaw8L0BzMVTqUEYwEKwIp5XCzpSBBgRH23XOD2PvRa9XoAT74FbyGhcuxkRaz/7uFYa
        gHt/XQfgz8dyoVpxNcBI1dXrXY3UEK00gF8HsNmvBmjSA9gM89IsjES8zXSvKLutiNf3GqPH1vNrxmvW
        22wnniRQaAqxt3zeVe9bVUbE6nu/P8dojwG6lUN+HcDC57aQStU1gIXtZWFHIt4C97KwIxHPq+6vx9Xz
        F4FX6MR76BZy73cqAhHrt9nYrgF+LPqe6BDR9BuAjAcs6wC2QRCfqdRUGQBgxCs8Lw87ko3X4+q5I/g6
        PtMWQCfeQleQ+vcUVPmf2XEiVt/7/TlGYICviKbXAEWTP/3lDio1WQawsCMBzQK0imBH0ng9JudNZb3N
        duIVvMKzkPM/slkgYv02G9s1wN+L/kT0TREG+IJoUkvSACF8UQ++iIaaSgMoaAXoFcFWUXhlP+L1mJyz
        KOu1DRS+ZjzxHrzCzP/HQlf5v91xIlbf2301niIMjhT9kejXRF8W7R8GsLC9LGji7WfkgUfSfYnnmJyz
        DL4f4zXjiY+gW9A8QVWNjaGxXMTan9kYY4C/Ff2+6FdEB4paYgAD3/5uH5WaTgNEsCOxL8fS81eB78d4
        wBOv4C1wBb1jx1j+p/XQ9u3bs23btmdbt27Ldf311+fb+NmOHTvyfTvm2JkfU9putTD4c9FviQ4WfUk0
        fQagQaioXQew2a8G2J8ExCJdd9112bXXXpvrmmuuye+crNi2ZcsWMcPW/H8wqlFIDLnFfu+II474R2Hw
        bRHd/0AmgJRqBuhmvl8HiAzQbw/gM97KZjsiXt9Hme6l+3IszkV81cwn68lMsryT3TtyuGQxEF977bUc
        6ObNr+Z3SdTxeakvdacdNkp75Nr4jLTNs9m8efOyl6QNNm/enMfy+uSTT2YrV67cfcwxx/yLtP93Rb8h
        Glj2U2oZIFoHGBYD6H4cR89FfBX4dPf0eIBX4K+++moHotSFenVAb8ohb9iwIVu//snsiSeekERZmz36
        6KPZ6tWrs9XyumbNY7J9XXb55ZfnMcTTXiSUwP98xowZ/yFt/2ei3xZ9XcTkD07TbwAaCbC9dQADn1/t
        7tcAHriVArRSA0TAvdhPj8W5yHw1QCrzgU/GA566Ux8yefbs2dm6det6oAH8yCOPZA899JAky/35H9Zc
        uvTe7J577pHXpdmy5cuzBx58MFslZliwYEHeNk899VQO/+GHH87OPvvs/5F2P0z0LdGviuj6vygaCHxK
        2gBd+CoaS9WDL6Ih22oA3Z/j6LnUAFw7dSnr9sl84HPtZPfatWtz0BdccEG2XCDfu2xZdo8Avuuuu/L5
        EX9S99bbbssh8zeVmDfxebH8fO3jj+dtYeFL5mOmS6XN/1L0e6JviOAyUPiUoTCAAvQiPgLuxb56LIWv
        10s9qFcEn66fMZ9un8wHPl35smXLc9BnnnlmDvmmm27Kbrzxxnzix+Ru3ryrsiuuvDK74oorsivllX3X
        r1+fzxE4jocvk8al0t5/LfoDEYs+XxUNbNy3pZ4BDPzJNoAF7uXBq6oYQPflOArfGoB6afZ7+Db7qQeZ
        v0yy/TbJZmb6p512WnbZZZdnc+fOzebMmZPNmjUr+8Uv/k9eZ2e33HKLjP1r8qGDIURNpPA5FvBvvfXW
        dYcccsgR0t7fEbHke5BoSuBTmhvAwNc/7dJWA+hx1ABcK9dNvO/6LXwd+5mhUy/GabL5OoF/6aWXZief
        fHJ2ySWX5JNiuv2VKx/Js1zPw3EtfNrBwl+8ePHLhx9+OG3Oat+vi5jxs+ADlykptQxAZXQdgAay2a8G
        2JdElnOrRzfOhG/mzJl5t0/mA7+oYIAIvp0/yMRw51FHHXWMtLPe7n1NNKXwKUkD9LJf5NcBIgM06QFs
        tnv5rLciPsp6FfvocXz204sRr9nvu3693+cenet+XCZvTPYY78n+2bPn5LB9UfgcA/j0Hh7+vffe++Hx
        xx9/grQxT/pY6Rv47V5RqWUAvw4wnQYAcFUDcA5rAOBTH+LtxM92/RiA7p8unevnH2TcffeSfLIH/Kuu
        uioHbksV+MuXL9990kkn/Ze0r97rs84/LfAp1Q3QHfsBS5emmdRWA+h+HMPC1+xn7FcD2OxX+KzJA5EF
        H1bugCdjdj4kMNljImgL5+CYwGdJF/jU2cK///7795x11llnS9uyxj9l9/plpbYBcnXBD9oAFrgXkFMG
        4Bgc3xuA+qgBouzvPNAZy9fouc4NGzoTQIbAeZL5F198cT6J01IGn6GjCz87//zzL5R2PVz0u6Ipu9cv
        K/0boAu/zQYAPuJ6uX7qQ1etBoiyn+6f8Z/rXbdufT78cWvHvf3//vznOWQLn/gI/qpVq3L4F110EQs9
        fyFioYcHPNMOn9LIAD34IoXf1AAeupWHrlLIRQbQ/TiGz36uH2BqAO3+7dhP9gOT7p9rZ/WO+3/+Y9rc
        uZcCs2dcC5/9qSdtYOHPnTv3BmlP4PNsH/hTttCTKpUNoPCHxQB6DG8A6gI0xn41gHb/wKf7J/vp/slm
        6sHDnLvvvju/LZwz55L8ToBjF8Hn2YDCnzdv3qIDDzzwr6Q9gT+lq3xVSi0DkCF+HcAbYF8RsLnb4akd
        Y/65556bnXHGGdkpp5ySLVmypAcfswAfc3v4MmFcetBBB/2NtOWUL/FWLbUMEK0DeANMVg/gs95KM514
        m/kUXtmHY5SN/9oDFHX/e8f/dTnM2267XW79rs5mz5mT71MG/4EHHiDzFx588MF2fX9Kl3irlloGiNYB
        2mQAFftwjMgAOv4z+SNeu3+d/QOV2z++2LFpU3f8X748u3nBgvzenyVfTMN+rBFE8C+77LIbut2+h097
        t6rUngMA1q4DtM0Aug/HKBr/IwOUjf88z2fou+aaawX0unHwqSvweUoI/FmzZulsX8f81sKn1DYAojFV
        w2gAXf3zBuh0/9z+bZVrlPt/qQv38Iz5C+QWkLsA/eqXh//ggw/uuUCKtBtf6NBbPR3zWwmfUs0ABv6+
        aAA//ivgznf0MMA9Mv9Z1HvaRx2oI/MD4MscYfc555xzprSZrvCxyNO6CV9Uhs4AFnaRAfQY1gBcdxUD
        MP7rLR1f4uiu3+e9ANfu4a9YseKDU089lfai/X5HxPIubdp6+JSRAUoMQA8AZL7jx8Mgrp16Kfxly5aN
        nXDCCf8mbcWvb+mDnWld269bahmAhtrX1wH0OwDM+FkD4Ns+fOmD216Fz8RQeoSXjj766H+Sdvpj0W+K
        eKQ7VPAptQyQWgcg2yKRiUWyWW/lM1/lM96LffQYHJ/zc21RDzDxGUCnB2Ccp5eiB2NNn17Nwl+0aNHa
        ww477IfSRn8o4ps8fJmDR7pDBZ9SywCpdQAPXuWhW1noVh68VQRexc/1GByf83NtXGtVAzDT51aXLp8h
        DPjMB4AvdwJ3HXroofzOHr+1Q7vZr3ENFXxKNQOIMACiMYrWATx4lYduZaFbeehWEXiV7sMxOD7nr2MA
        7gI6v/ixReYpr8hc4IUefBkS5kq78DiX2zy9xx9a+BQunHGLb6Py9ST+IMFPRTNEP4sMgGhM1TAbwD8I
        4jEw6wD5MCC9AJNBun8Z7vbMnDnzDGkTvsXDbd5Q3ONXKWoA3MyXExnXjhWdKMq/9ThsBkDswzE4PudX
        A3DtGEBXAoueBGIA/UUQgf+Z3Ob9u7SHzvSH6jYvVagAkxcWLvhe+g9EPxEdLzoRA2jDWehWVQyAPHiV
        B6/y0K0i6FbswzE4vp5fr1d7gSITdAzwer4cLF3/h8cdd9w/S1vwte2hnemXFSrBGEbF6NoY3+gFMMGx
        GGB/LTLJXX3kkUf+nbQDk72hnumXFSpCV8Z4xkSQymKC74swwo9ETAz3ZTHvQdSVOvNbOjzGpcvnu3sM
        j0M9008VKoWzcTgmoCdgOGBOwMSQu4N9WdQRAZxFHeoOeLKe8d5O9vY5+BQqRbeGCbitYThgToDzuTvA
        FPu6qCeiztSdNqAt9rkuv6hQQRyO0+nqqDiTHWa7+4uoL6LutAHg99msjwoVVVHx/VW2HUZlVEZlVEZl
        VIavHHDA/wMi9HoovxXzgwAAAABJRU5ErkJggg==
</value>
  </data>
</root>